From 0e7b7e044f91778d09b8d3074fe7976a353420d6 Mon Sep 17 00:00:00 2001
From: luca abeni <luca.abeni@santannapisa.it>
Date: Fri, 29 Jun 2018 00:07:54 +0200
Subject: [PATCH 6/9] Some additional fixed to be squashed

---
 kernel/sched/deadline.c |  1 +
 kernel/sched/rt.c       | 24 ++++++++++++------------
 2 files changed, 13 insertions(+), 12 deletions(-)

diff --git a/kernel/sched/deadline.c b/kernel/sched/deadline.c
index 66ee653c167d..582a698af612 100644
--- a/kernel/sched/deadline.c
+++ b/kernel/sched/deadline.c
@@ -1109,6 +1109,7 @@ static enum hrtimer_restart dl_task_timer(struct hrtimer *timer)
 #endif
 		} else {
 			replenish_dl_entity(dl_se, dl_se);
+			task_non_contending(dl_se);
 		}
 
 		raw_spin_unlock(&rq->lock);
diff --git a/kernel/sched/rt.c b/kernel/sched/rt.c
index 94fa182e669d..2e568d2705ac 100644
--- a/kernel/sched/rt.c
+++ b/kernel/sched/rt.c
@@ -43,18 +43,17 @@ void free_rt_sched_group(struct task_group *tg)
 	int i;
 
 	for_each_possible_cpu(i) {
-		if (tg->rt_rq)
-			kfree(tg->rt_rq[i]);
 		if (tg->dl_se) {
+			dl_init_tg(tg->dl_se[i], 0, tg->dl_se[i]->dl_period);
 			raw_spin_lock_irqsave(&cpu_rq(i)->lock, flags);
-			if (!tg->dl_se[i]->dl_throttled)
-				dequeue_dl_entity(tg->dl_se[i]);
-			task_non_contending(tg->dl_se[i]);
+			BUG_ON(tg->rt_rq[i]->rt_nr_running);
 			raw_spin_unlock_irqrestore(&cpu_rq(i)->lock, flags);
 
 			hrtimer_cancel(&tg->dl_se[i]->dl_timer);
 			kfree(tg->dl_se[i]);
 		}
+		if (tg->rt_rq)
+			kfree(tg->rt_rq[i]);
 	}
 
 	kfree(tg->rt_rq);
@@ -624,13 +623,14 @@ static void dequeue_task_rt(struct rq *rq, struct task_struct *p, int flags)
 	if (is_dl_group(rt_rq) && !rt_rq->rt_nr_running) {
 		struct sched_dl_entity *dl_se = dl_group_of(rt_rq);
 
-#ifndef CONFIG_RT_GROUP_SCHED
-		rt_queue_pull_task(rq);
-#endif
-		if (!rt_rq->rt_nr_running) {
-			dequeue_dl_entity(dl_se);
-			task_non_contending(dl_se);
-			resched_curr(rq);
+		if (!dl_se->dl_throttled) {
+			rt_queue_pull_task(rq);
+
+			if (!rt_rq->rt_nr_running) {
+				dequeue_dl_entity(dl_se);
+				task_non_contending(dl_se);
+				resched_curr(rq);
+			}
 		}
 	}
 }
-- 
2.14.1

